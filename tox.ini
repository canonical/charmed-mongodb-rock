[tox]
requires =
	tox>=4
env_list = lint, integration

[testenv]
setenv =
	name=charmed-mongodb
	registry_namespace=ghcr.io/canonical
	repo=https://github.com/canonical/mongodb-k8s-operator.git
	branch=5/edge

[testenv:lint]
description = run linters
skip_install = true
deps =
	yamllint
commands = 
	yamllint --no-warnings rockcraft.yaml

[testenv:integration]
description = run operator integration tests
skip_install = true
allowlist_externals =
	tox
	bash
commands = 
	bash -ec 'if ! [ -f {env:name}_*-$(yq .base rockcraft.yaml | cut -c 8-)_edge_amd64.rock ]; \
		then rockcraft pack; ./retag_rock.sh; fi'
	bash -ec 'microk8s ctr image import {env:name}_*-$(yq .base rockcraft.yaml | \
		cut -c 8-)_edge_amd64.rock --base-name {env:registry_namespace}/{env:name}'
	bash -ec 'if ! [ -d operator ]; then git clone --single-branch --branch {env:branch} {env:repo} operator; fi' {posargs}
	tox --workdir operator -c operator -e integration

[testenv:ha-integration]
description = run operator integration tests
skip_install = true
allowlist_externals =
	tox
	bash
commands = 
	bash -ec 'if ! [ -f {env:name}_*-$(yq .base rockcraft.yaml | cut -c 8-)_edge_amd64.rock ]; \
		then rockcraft pack; ./retag_rock.sh; fi'
	bash -ec 'microk8s ctr image import {env:name}_*-$(yq .base rockcraft.yaml | \
		cut -c 8-)_edge_amd64.rock --base-name {env:registry_namespace}/{env:name}'
	bash -ec 'if ! [ -d operator ]; then git clone --single-branch --branch {env:branch} {env:repo} operator; fi' {posargs}
	tox --workdir operator -c operator -e ha-integration
[testenv:tls-integration]
description = run operator integration tests
skip_install = true
allowlist_externals =
	tox
	bash
commands = 
	bash -ec 'if ! [ -f {env:name}_*-$(yq .base rockcraft.yaml | cut -c 8-)_edge_amd64.rock ]; \
		then rockcraft pack; ./retag_rock.sh; fi'
	bash -ec 'microk8s ctr image import {env:name}_*-$(yq .base rockcraft.yaml | \
		cut -c 8-)_edge_amd64.rock --base-name {env:registry_namespace}/{env:name}'
	bash -ec 'if ! [ -d operator ]; then git clone --single-branch --branch {env:branch} {env:repo} operator; fi' {posargs}
	tox --workdir operator -c operator -e tls-integration
